@page
@model StockSavvy.Pages.HomeModel
@{
    ViewData["Title"] = "Home page";
}

<html>
<head>
  <title>Top 50 Cryptocurrencies</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
    }
    
    th, td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
  </style>
</head>
<body>
<h1>Top 50 Volume Cryptocurrencies</h1>
<table id="cryptocurrency-table">
  <thead>
  <tr>
    <th>Symbol</th>
    <th>Price (USD)</th>
    <th>Market Cap (USD)</th>
    <th>Change (24h)</th>
  </tr>
  </thead>
  <tbody></tbody>
</table>

<script>
    async function fetchData() {
      try {
        const response = await fetch('https://api.binance.com/api/v3/ticker/24hr');
        const data = await response.json();
        const tableBody = document.querySelector('#cryptocurrency-table tbody');
        console.log(data);
        const filteredData = data.filter(crypto => crypto.symbol.slice(-4) === 'USDT');
        filteredData.sort((a, b) => b.quoteVolume - a.quoteVolume);
        filteredData.slice(0, 50).forEach(crypto => {
          crypto.lastPrice = parseFloat(crypto.lastPrice).toFixed(4);
          crypto.quoteVolume = parseFloat(crypto.quoteVolume).toFixed(2);
          crypto.priceChangePercent = parseFloat(crypto.priceChangePercent).toFixed(2);
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${crypto.symbol}</td>
            <td>${crypto.lastPrice || '-'}</td>
            <td>${crypto.quoteVolume}</td>
            <td>${crypto.priceChangePercent ? `${crypto.priceChangePercent}%` : '-'}</td>
          `;
          tableBody.appendChild(row);
        });
      } catch (error) {
        console.error('Error:', error);
      }
    };
    fetchData();
  </script>
</body>
</html>